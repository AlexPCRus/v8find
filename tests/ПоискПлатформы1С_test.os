#использовать "../src"
#Использовать asserts
#Использовать logos

Перем юТест;
Перем ЭтоWindows;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПоискПлатформы1С_Windows");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПоискПлатформы1С_OSX");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПоискПлатформы1С_Linux");

	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПроверитьПоискПлатформы1С_Windows() Экспорт
	
	Если Не ЭтоWindows Тогда
		Сообщить("Тест выполняется только на windows");
		юТест.ТестПройден();
		Возврат;
	КонецЕсли;

	КаталогFixtures = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures");
	КаталогWindows = ОбъединитьПути(КаталогFixtures, "windows");

	ПоискПлатформы1С.СброситьПоиск();
	ПоискПлатформы1С.ДобавитьКаталоГПоиска(КаталогWindows, РазрядностьПлатформы.x86);

	ПутьКПредприятию = ПоискПлатформы1С.ПутьКПредприятию("8.3.13.9999");

	Ожидаем.Что(НЕ ПустаяСтрока(ПутьКПредприятию), "исполняемый файл приложения 1С найден").ЭтоИстина();

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПоискПлатформы1С_OSX() Экспорт

	Если ЭтоWindows Тогда
		Сообщить("Тест выполняется только на unix системых");
		юТест.ТестПройден();
		Возврат;
	КонецЕсли;

	КаталогFixtures = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures");
	КаталогВерсий = ОбъединитьПути(КаталогFixtures, "linux", "osx");

	ПоискПлатформы1С.СброситьПоиск();
	ПоискПлатформы1С.ДобавитьКаталоГПоиска(КаталогВерсий, РазрядностьПлатформы.x64);

	ПутьКПредприятию = ПоискПлатформы1С.ПутьКПредприятию("8.3.13.9999");
	ЭталонныйПуть = ОбъединитьПути(КаталогВерсий, "8.3.13.9999", "1cv8");
	Ожидаем.Что(ПутьКПредприятию, "исполняемый файл приложения 1С найден").Равно(ЭталонныйПуть);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПоискПлатформы1С_Linux() Экспорт

	Если ЭтоWindows Тогда
		Сообщить("Тест выполняется только на unix системых");
		юТест.ТестПройден();
		Возврат;
	КонецЕсли;

	КаталогFixtures = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures");
	КаталогВерсий_x86 = ОбъединитьПути(КаталогFixtures, "linux", "8.3.13.9999", "i386");
	КаталогВерсий_x64 = ОбъединитьПути(КаталогFixtures, "linux", "8.3.13.9999", "x86_64");

	ПоискПлатформы1С.СброситьПоиск();
	ПоискПлатформы1С.ДобавитьКаталоГПоиска(КаталогВерсий_x86, РазрядностьПлатформы.x86, "0.0.0.0");
	ПоискПлатформы1С.ДобавитьКаталоГПоиска(КаталогВерсий_x64, РазрядностьПлатформы.x64, "0.0.0.0");

	КаталогВерсий_x86_8 = ОбъединитьПути(КаталогFixtures, "linux", "8.3.13.9998", "i386");
	КаталогВерсий_x64_8 = ОбъединитьПути(КаталогFixtures, "linux", "8.3.13.9998", "x86_64");

	ПоискПлатформы1С.ДобавитьКаталоГПоиска(КаталогВерсий_x86, РазрядностьПлатформы.x86, "0.0.0.0");
	ПоискПлатформы1С.ДобавитьКаталоГПоиска(КаталогВерсий_x64, РазрядностьПлатформы.x64, "0.0.0.0");

	ПутьКПредприятию_x86 = ПоискПлатформы1С.ПутьКПредприятию("8.3.13.9999", РазрядностьПлатформы.x86);
	ПутьКПредприятию_x64 = ПоискПлатформы1С.ПутьКПредприятию("8.3.13", РазрядностьПлатформы.x64);
	ПутьКПредприятию_x86x64 = ПоискПлатформы1С.ПутьКПредприятию("8.3.13.9999", РазрядностьПлатформы.x86x64);
	ПутьКПредприятию_x64x86 = ПоискПлатформы1С.ПутьКПредприятию("8.3.13.9999", РазрядностьПлатформы.x64x86);
	
	ЭталонныйПуть = ОбъединитьПути(КаталогВерсий_x86, "1cv8");
	Ожидаем.Что(ПутьКПредприятию_x86, "ПутьКПредприятию_x86 исполняемый файл приложения 1С найден").Равно(ЭталонныйПуть);

	ЭталонныйПуть = ОбъединитьПути(КаталогВерсий_x64, "1cv8");
	Ожидаем.Что(ПутьКПредприятию_x64, "ПутьКПредприятию_x64 исполняемый файл приложения 1С найден").Равно(ЭталонныйПуть);

	ЭталонныйПуть = ОбъединитьПути(КаталогВерсий_x86, "1cv8");
	Ожидаем.Что(ПутьКПредприятию_x86x64, "ПутьКПредприятию_x86x64 исполняемый файл приложения 1С найден").Равно(ЭталонныйПуть);

	// ЭталонныйПуть = ОбъединитьПути(КаталогВерсий_x64, "1cv8");
	// Ожидаем.Что(ПутьКПредприятию_x64x86, "ПутьКПредприятию_x64x86 исполняемый файл приложения 1С найден").Равно(ЭталонныйПуть);

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.lib.v8find");
Лог.УстановитьУровень(УровниЛога.Отладка);

СИ = Новый СистемнаяИнформация;
ЭтоWindows = Найти(НРег(СИ.ВерсияОС), "windows") > 0;




